(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[612],{17571:(e,n,t)=>{"use strict";t.d(n,{ReactConceptPageLayout:()=>l});var r=t(139),s=t(58523),a=t(51081),o=t(44083),i=t(31089),c=t(17814);function d(e){let{content:n,className:t=""}=e;return(0,s.useEffect)(()=>{window.mermaid&&window.mermaid.init()},[]),(0,r.jsx)("div",{className:"prose prose-slate max-w-none ".concat(t),children:(0,r.jsx)(a.oz,{components:{code:e=>{let{node:n,inline:t,className:s,children:a,...o}=e,i=/language-(\w+)/.exec(s||""),d=i?i[1]:"",l=String(a).replace(/\n$/,"");return t?(0,r.jsx)("code",{className:"bg-muted px-1 py-0.5 rounded text-sm font-mono",...o,children:a}):"mermaid"===d?(0,r.jsxs)("div",{className:"my-6 p-4 bg-muted rounded-lg",children:[(0,r.jsx)("div",{className:"text-sm text-muted-foreground mb-2",children:"Mermaid Chart"}),(0,r.jsx)("div",{className:"mermaid",children:l},Math.random())]}):(0,r.jsx)(c.CodeBlock,{code:l,language:d,filename:"jsx"===d?"Component":"Code",showLineNumbers:!0})},h1:e=>{let{children:n,...t}=e;return(0,r.jsx)("h1",{className:"text-3xl font-bold mb-4 text-foreground",...t,children:n})},h2:e=>{let{children:n,...t}=e;return(0,r.jsx)("h2",{className:"text-2xl font-semibold mb-3 text-foreground",...t,children:n})},h3:e=>{let{children:n,...t}=e;return(0,r.jsx)("h3",{className:"text-xl font-semibold mb-2 text-foreground",...t,children:n})},p:e=>{let{children:n,...t}=e;return(0,r.jsx)("p",{className:"mb-4 text-muted-foreground leading-relaxed",...t,children:n})},ul:e=>{let{children:n,...t}=e;return(0,r.jsx)("ul",{className:"list-disc list-inside mb-4 space-y-1 text-muted-foreground",...t,children:n})},ol:e=>{let{children:n,...t}=e;return(0,r.jsx)("ol",{className:"list-decimal list-inside mb-4 space-y-1 text-muted-foreground",...t,children:n})},blockquote:e=>{let{children:n,...t}=e;return(0,r.jsx)("blockquote",{className:"border-l-4 border-primary pl-4 py-2 my-4 bg-muted/50 italic text-muted-foreground",...t,children:n})},a:e=>{let{href:n,children:t,...s}=e;return(0,r.jsx)("a",{href:n,className:"text-primary hover:text-primary/80 underline underline-offset-2 transition-colors",target:"_blank",rel:"noopener noreferrer",...s,children:t})}},remarkPlugins:[o.A],rehypePlugins:[i.A],children:n})})}function l(e){let{title:n,description:t,conceptGuide:s,interactiveComponent:a,furtherExploration:o}=e;return(0,r.jsxs)("div",{className:"container mx-auto px-6 py-8 max-w-6xl",children:[(0,r.jsxs)("div",{className:"text-center mb-12",children:[(0,r.jsx)("h1",{className:"text-4xl font-bold mb-4 text-foreground",children:n}),(0,r.jsx)("p",{className:"text-xl text-muted-foreground max-w-3xl mx-auto",children:t})]}),(0,r.jsxs)("section",{className:"mb-16",children:[(0,r.jsx)("h2",{className:"text-2xl font-semibold mb-6 text-foreground",children:"Concept Guide"}),(0,r.jsx)("div",{className:"bg-card border border-border rounded-lg p-6",children:(0,r.jsx)(d,{content:s})})]}),(0,r.jsxs)("section",{className:"mb-16",children:[(0,r.jsx)("h2",{className:"text-2xl font-semibold mb-6 text-foreground",children:"Interactive Example"}),(0,r.jsx)("div",{className:"bg-card border border-border rounded-lg p-6",children:a})]}),(0,r.jsxs)("section",{className:"mb-16",children:[(0,r.jsx)("h2",{className:"text-2xl font-semibold mb-6 text-foreground",children:"Further Exploration"}),(0,r.jsx)("div",{className:"bg-card border border-border rounded-lg p-6",children:(0,r.jsx)(d,{content:o})})]})]})}},17814:(e,n,t)=>{"use strict";t.d(n,{CodeBlock:()=>d});var r=t(139),s=t(58523),a=t(7320),o=t(84254),i=t(47339),c=t(88412);let d=e=>{let{language:n,filename:t,title:d,code:l,highlightLines:u=[],showLineNumbers:h=!0,tabs:m=[]}=e,[f,p]=s.useState(!1),[g,x]=s.useState(0),v=m.length>0,b=async()=>{let e=v?m[g].code:l;e&&(await navigator.clipboard.writeText(e),p(!0),setTimeout(()=>p(!1),2e3))},y=v?m[g].code:l,j=v&&m[g].language||n,w=v?m[g].highlightLines||[]:u;return(0,r.jsxs)("div",{className:"relative w-full rounded-lg bg-slate-900 p-4 font-mono text-sm",children:[(0,r.jsxs)("div",{className:"flex flex-col gap-2",children:[v&&(0,r.jsx)("div",{className:"flex overflow-x-auto",children:m.map((e,n)=>(0,r.jsx)("button",{onClick:()=>x(n),className:"px-3 !py-2 text-xs transition-colors font-sans ".concat(g===n?"text-white":"text-zinc-400 hover:text-zinc-200"),children:e.name},n))}),!v&&(t||d)&&(0,r.jsxs)("div",{className:"flex justify-between items-center py-2",children:[(0,r.jsx)("div",{className:"text-xs text-zinc-400",children:t||d}),(0,r.jsx)("button",{onClick:b,className:"flex items-center gap-1 text-xs text-zinc-400 hover:text-zinc-200 transition-colors font-sans",children:f?(0,r.jsx)(i.A,{size:14}):(0,r.jsx)(c.A,{size:14})})]})]}),(0,r.jsx)(a.A,{language:j,style:o.iU,customStyle:{margin:0,padding:0,background:"transparent",fontSize:"0.875rem"},wrapLines:!0,showLineNumbers:h,lineProps:e=>({style:{backgroundColor:w.includes(e)?"rgba(255,255,255,0.1)":"transparent",display:"block",width:"100%"}}),PreTag:"div",children:String(y)})]})}},32482:(e,n,t)=>{"use strict";t.d(n,{cn:()=>a});var r=t(55866),s=t(88766);function a(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return(0,s.QP)((0,r.$)(n))}},46975:(e,n,t)=>{"use strict";t.d(n,{BT:()=>c,Wu:()=>d,ZB:()=>i,Zp:()=>a,aR:()=>o});var r=t(139);t(58523);var s=t(32482);function a(e){let{className:n,...t}=e;return(0,r.jsx)("div",{"data-slot":"card",className:(0,s.cn)("bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",n),...t})}function o(e){let{className:n,...t}=e;return(0,r.jsx)("div",{"data-slot":"card-header",className:(0,s.cn)("@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",n),...t})}function i(e){let{className:n,...t}=e;return(0,r.jsx)("div",{"data-slot":"card-title",className:(0,s.cn)("leading-none font-semibold",n),...t})}function c(e){let{className:n,...t}=e;return(0,r.jsx)("div",{"data-slot":"card-description",className:(0,s.cn)("text-muted-foreground text-sm",n),...t})}function d(e){let{className:n,...t}=e;return(0,r.jsx)("div",{"data-slot":"card-content",className:(0,s.cn)("px-6",n),...t})}},65310:(e,n,t)=>{Promise.resolve().then(t.bind(t,81278))},81278:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>c});var r=t(139);t(58523);var s=t(17571),a=t(88581),o=t(46975),i=t(90678);function c(){let e=(0,r.jsxs)("div",{className:"space-y-6",children:[(0,r.jsxs)("div",{className:"text-center",children:[(0,r.jsx)("h3",{className:"text-lg font-semibold mb-4",children:"Data Fetching Demo"}),(0,r.jsx)("p",{className:"text-sm text-muted-foreground mb-4",children:"This demonstrates the three states of data fetching: loading, error, and success."})]}),(0,r.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4",children:[(0,r.jsxs)(o.Zp,{children:[(0,r.jsx)(o.aR,{children:(0,r.jsx)(o.ZB,{className:"text-sm",children:"Loading State"})}),(0,r.jsx)(o.Wu,{children:(0,r.jsx)("div",{className:"flex items-center justify-center p-4",children:(0,r.jsx)("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-primary"})})})]}),(0,r.jsxs)(o.Zp,{children:[(0,r.jsx)(o.aR,{children:(0,r.jsx)(o.ZB,{className:"text-sm",children:"Error State"})}),(0,r.jsx)(o.Wu,{children:(0,r.jsxs)("div",{className:"text-center p-4",children:[(0,r.jsx)(i.E,{variant:"destructive",children:"Error"}),(0,r.jsx)("p",{className:"text-xs text-muted-foreground mt-2",children:"Failed to fetch data"})]})})]}),(0,r.jsxs)(o.Zp,{children:[(0,r.jsx)(o.aR,{children:(0,r.jsx)(o.ZB,{className:"text-sm",children:"Success State"})}),(0,r.jsx)(o.Wu,{children:(0,r.jsxs)("div",{className:"text-center p-4",children:[(0,r.jsx)(i.E,{variant:"default",children:"Success"}),(0,r.jsx)("p",{className:"text-xs text-muted-foreground mt-2",children:"Data loaded successfully"})]})})]})]}),(0,r.jsx)("div",{className:"text-center",children:(0,r.jsx)(a.$,{className:"bg-primary hover:bg-primary/90",children:"Simulate Fetch"})})]});return(0,r.jsx)(s.ReactConceptPageLayout,{title:"Fetching Data with React",description:"Learn how to fetch data in React components using useEffect, handle loading states, and implement proper error handling.",conceptGuide:'# React Study Doc - Fetching Data\n\n### Mermaid Flowchart\n\n```mermaid\nflowchart TD\n    A[App Component]\n    L[List Component]\n\n    subgraph Actions\n        SLT["setLoading = true"]\n        FP["fetchPosts()"]\n        SP["setPosts (update posts state)"]\n        SFP["setFilteredPosts (update filteredPosts)"]\n        SFT["setFetched = true"]\n        SLF["setLoading = false"]\n    end\n\n    A --\x3e IL[set fetched = false, loading = false, error empty]\n    IL --\x3e FB[Show Fetch Posts button]\n    %% Pressing Fetch Posts button\n    FB -- User clicks Fetch Posts --\x3e\n    UC --\x3e SLT\n    SLT --\x3e FP\n    FP --\x3e SP\n    SP --\x3e SFP\n    SFP --\x3e SFT\n    SFT --\x3e SLF\n    SLF --\x3e L\n    L -- renders Posts to user --\x3e L\n```\n\n### useEffect\n\n`useEffect` is a React Hook that lets you run _side effects_ in your function components.\n\n**Side effects** include:\n\n- data fetching\n- subscriptions\n- manually changing the DOM\n- timers\n- etc.\n\n```tsx\nuseEffect(setup, dependencies?)\n```\n\n#### Parameters\n\n##### setup function\n\nThe _first argument_ is a `function`.\n\nThis function runs _after the component renders_.\n\n> This function has your Effect\'s _logic_.\n\nYour setup function may also optionally return a _cleanup_ function.\n\n> When your component is added to the DOM, React will run your setup function. After every re-render with changed dependencies, React will first run the cleanup function (if you provided it) with the old values, and then run your setup function with the new values.\n\nAfter your component is removed from the DOM, React will run your cleanup function.\n\n##### dependencies\n\nThe _second argument_ is an `array of variables`.\n\nThe **effect will re-run** _whenever any value in this array changes_.\n\nIf you pass an **empty array** (‎`[]`), _the effect runs only once after the initial render_ (like ‎`componentDidMount`).\n\nIf you **omit the array**, the effect will _run after every render_.\n\n> If your linter is configured for React, it will verify that every reactive value is correctly specified as a dependency.\n\nThe **list of dependencies** must have a _constant number of items_ and be written inline like [dep1, dep2, dep3].\n\n> React will compare each dependency with its previous value using the Object.is comparison. If you omit this argument, your Effect will re-run after every re-render of the component.\n\n##### cleanup function (optional)\n\nIf your effect needs to **clean up** (e.g., remove a timer, unsubscribe), _return a function_ from the setup function:\n\n```jsx\nuseEffect(() => {\n  const timer = setInterval(() => {\n    // do something\n  }, 1000);\n\n  // Cleanup function runs before the effect re-runs or when the component unmounts\n  return () => clearInterval(timer);\n}, []);\n```\n\n#### My Code\n\n```jsx\nconst [fetched, setFetched] = useState(false);\n\nuseEffect(() => {\n  if (fetched) {\n    setFilteredPosts(getFilteredAndSortedPosts());\n  }\n}, [posts, search, sort, fetched]);\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [search, setSearch] = useState(\'\');\n  const [sort, setSort] = useState(\'none\');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\'\');\n  const [fetched, setFetched] = useState(false);\n\n  // Fetch posts only when button is clicked\n  async function fetchPosts() {\n    setLoading(true);\n    setError(\'\');\n    try {\n      const res = await fetch(\'https://dummyjson.com/posts\');\n      if (!res.ok) throw new Error(\'Failed to fetch posts\');\n      const data = await res.json();\n      setPosts(data.posts);\n      setFilteredPosts(data.posts);\n      setFetched(true);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n}\n```\n\n- Setup function: runs ‎`setFilteredPosts(getFilteredAndSortedPosts())` if ‎`fetched` is true.\n- Dependencies: ‎`[posts, search, sort, fetched]`\n  - The effect runs after the first render, and every time any of these change.\n\n### Handling Rendering States\n\nThere are 3 states:\n\n1. `loading` - data is loading\n2. `error` - fetch failed\n3. `fetched` - fetch succeeded\n\n```tsx\nfunction Spinner() {\n  return <div style={{ padding: "2em", textAlign: "center" }}>Loading...</div>;\n\nfunction ErrorMessage({ message }) {\n  return (\n    <div>\n      <p style={{ color: "red", padding: "2em" }}>{message}</p>\n    </div>\n  );\n}\nreturn(\n	/* other sections */\n	<section>\n	  {loading ? (\n		<Spinner />\n	  ) : error ? (\n		<ErrorMessage message={error} />\n	  ) : (\n		fetched && (\n		  <List\n			posts={filteredPosts}\n			search={search}\n			sort={sort}\n			setSort={setSort}\n		  />\n		)\n	  )}\n	</section>\n)\n```\n\n## Handling Rendering Component\n\nHere we have a list that needs to be rendered.\n\nWe need to map over the array.\n\n### Mermaid Sequence Diagram\n\n```mermaid\nsequenceDiagram\nparticipant U as User\nparticipant App\nparticipant State\nparticipant List\n\nU->>App: Load page\nApp->>State: set fetched false, loading false, error empty\nApp--\x3e>U: Show Fetch Posts button\n\nU->>App: Click Fetch Posts\nApp->>State: set loading true\nApp->>App: fetchPosts\nApp->>State: set posts, set filteredPosts, set fetched true\nApp->>State: set loading false\n\nApp->>List: render with filteredPosts\nList--\x3e>U: Display posts\n```',interactiveComponent:e,furtherExploration:"# Advanced Data Fetching Patterns\n\n## Custom Hooks for Data Fetching\n\nCreate reusable hooks to manage data fetching logic:\n\n```jsx\nfunction useDataFetching(url) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Network response was not ok');\n      const result = await response.json();\n      setData(result);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [url]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return { data, loading, error, refetch: fetchData };\n}\n```\n\n## Error Boundaries\n\nImplement error boundaries to catch and handle errors gracefully:\n\n```jsx\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n```\n\n## Optimistic Updates\n\nUpdate UI immediately while making API calls:\n\n```jsx\nfunction useOptimisticUpdate() {\n  const [data, setData] = useState(null);\n  \n  const updateOptimistically = useCallback(async (newData, updateFn) => {\n    // Update UI immediately\n    setData(newData);\n    \n    try {\n      // Make API call\n      await updateFn();\n    } catch (error) {\n      // Revert on error\n      setData(data);\n      throw error;\n    }\n  }, [data]);\n  \n  return { data, updateOptimistically };\n}\n```\n\n## Data Fetching Architecture\n\n```mermaid\ngraph TD\n    A[Component] --\x3e B[Custom Hook]\n    B --\x3e C[API Layer]\n    C --\x3e D[Cache Layer]\n    C --\x3e E[Error Handler]\n    B --\x3e F[State Management]\n    F --\x3e G[Loading State]\n    F --\x3e H[Data State]\n    F --\x3e I[Error State]\n    G --\x3e J[UI Loading]\n    H --\x3e K[UI Success]\n    I --\x3e L[UI Error]\n```\n\n## Best Practices\n\n1. **Always handle loading states** - Users need feedback\n2. **Implement error boundaries** - Graceful error handling\n3. **Use AbortController** - Cancel requests when component unmounts\n4. **Implement retry logic** - Network failures are common\n5. **Cache responses** - Avoid unnecessary API calls\n6. **Debounce search inputs** - Reduce API calls during typing\n\n```jsx\n// Example with AbortController\nuseEffect(() => {\n  const abortController = new AbortController();\n  \n  const fetchData = async () => {\n    try {\n      const response = await fetch(url, {\n        signal: abortController.signal\n      });\n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        // Request was cancelled\n        return;\n      }\n      setError(error.message);\n    }\n  };\n  \n  fetchData();\n  \n  return () => {\n    abortController.abort();\n  };\n}, [url]);\n```"})}},88581:(e,n,t)=>{"use strict";t.d(n,{$:()=>c});var r=t(139);t(58523);var s=t(48011),a=t(18412),o=t(32482);let i=(0,a.F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",destructive:"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",outline:"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",secondary:"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2 has-[>svg]:px-3",sm:"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",lg:"h-10 rounded-md px-6 has-[>svg]:px-4",icon:"size-9"}},defaultVariants:{variant:"default",size:"default"}});function c(e){let{className:n,variant:t,size:a,asChild:c=!1,...d}=e,l=c?s.DX:"button";return(0,r.jsx)(l,{"data-slot":"button",className:(0,o.cn)(i({variant:t,size:a,className:n})),...d})}},90678:(e,n,t)=>{"use strict";t.d(n,{E:()=>c});var r=t(139);t(58523);var s=t(48011),a=t(18412),o=t(32482);let i=(0,a.F)("inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90",secondary:"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90",destructive:"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",outline:"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground"}},defaultVariants:{variant:"default"}});function c(e){let{className:n,variant:t,asChild:a=!1,...c}=e,d=a?s.DX:"span";return(0,r.jsx)(d,{"data-slot":"badge",className:(0,o.cn)(i({variant:t}),n),...c})}}},e=>{e.O(0,[532,763,797,462,976,358],()=>e(e.s=65310)),_N_E=e.O()}]);